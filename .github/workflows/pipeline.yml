- name: 🔑 GoogleサービスアカウントJSONを展開（どちらのSecret名でも可）
  run: |
    # 1) まずは Base64 版の Secret を探す（優先：GDRIVE_SA_JSON_BASE64 → 次点：SA_BASE64）
    SA_B64="${{ secrets.GDRIVE_SA_JSON_BASE64 }}"
    if [ -z "$SA_B64" ]; then
      SA_B64="${{ secrets.SA_BASE64 }}"
    fi

    if [ -n "$SA_B64" ]; then
      # Base64 → sa.json に復元（改行崩れ無し）
      printf '%s' "$SA_B64" | base64 -d > sa.json
    else
      # 2) Base64が無ければ、プレーンJSON版 Secret（GDRIVE_SA_JSON）をそのまま書き出し
      printf '%s' '${{ secrets.GDRIVE_SA_JSON }}' > sa.json
    fi

    # 検証（0バイト/壊れJSONならここで止める）
    python - <<'PY'
    import json,sys
    try:
        with open('sa.json','r',encoding='utf-8') as f:
            data=f.read()
        if not data.strip():
            print('❌ sa.json is empty'); sys.exit(1)
        json.loads(data)
        print('✅ sa.json OK')
    except Exception as e:
        print('❌ sa.json invalid:', e); sys.exit(1)
    PY

    # スクリプトが参照するパスを通知（既に使っている変数）
    echo "SERVICE_ACCOUNT_FILE=$PWD/sa.json" >> $GITHUB_ENV

- name: 🧪 Debug: sa.json の中身チェック（サイズと先頭数行）
  run: |
    ls -l sa.json || true
    head -n 3 sa.json || true
